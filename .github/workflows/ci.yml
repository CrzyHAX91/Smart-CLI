name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r user-workspace/flask-api-service/requirements.txt
        pip install pytest
    
    - name: Run Python tests
      run: pytest
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '16'
    
    - name: Install Node.js dependencies
      run: |
        cd user-workspace/ai-cli-tool
        npm ci
    
    - name: Run Node.js tests
      run: |
        cd user-workspace/ai-cli-tool
        npm test
    
    - name: Lint JavaScript
      run: |
        cd user-workspace/ai-cli-tool
        npm run lint

  security_scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install safety bandit

    - name: Run Snyk to check for vulnerabilities (Node.js)
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        command: test

    - name: Run Snyk to check for vulnerabilities (Python)
      uses: snyk/actions/python@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        command: test

    - name: Run safety check
      run: safety check -r user-workspace/flask-api-service/requirements.txt

    - name: Run Bandit
      run: bandit -r user-workspace/flask-api-service -f custom

    - name: Run npm audit
      run: |
        cd user-workspace/ai-cli-tool
        npm audit
        cd ../ai-cli-web
        npm audit

  release:
    needs: [test, security_scan]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: write
      actions: write
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Create Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        version=$(cat VERSION)
        git config user.name github-actions
        git config user.email github-actions@github.com
        git tag -a v$version -m "Release $version"
        git push origin v$version
        gh release create v$version --generate-notes
