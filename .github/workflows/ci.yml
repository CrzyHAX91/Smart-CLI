name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Run Tests
      shell: pwsh
      run: |
        # Run Pester tests if they exist
        if (Test-Path ./tests) {
          Install-Module -Name Pester -Force -SkipPublisherCheck
          Invoke-Pester ./tests -CI
        }
    
    - name: Lint PowerShell Scripts
      shell: pwsh
      run: |
        Install-Module -Name PSScriptAnalyzer -Force -SkipPublisherCheck
        $results = Invoke-ScriptAnalyzer -Path . -Recurse
        $results | Format-Table -AutoSize
        if ($results.Severity -contains 'Error') {
          throw "Script analysis found errors"
        }

  release:
    needs: test
    runs-on: windows-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Create Release
      shell: pwsh
      run: |
        $version = (Get-Content .\VERSION).Trim()
        git config user.name github-actions
        git config user.email github-actions@github.com
        git tag -a v$version -m "Release $version"
        git push origin v$version
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
